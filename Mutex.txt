#include<pthread.h>
#include<stdio.h>
#include<unistd.h>

pthread_mutex_t mutex;
int n = 10;
int buffer[10];
int in=0;
int out = 0;
int count = 0;

void* producer()
{
    for (int i=1;i<15;i++)
    {
   
      //while(count == n){};
       buffer[in] = i;
       in = (in + 1)%n;
       //pthread_mutex_lock(&mutex);
       count++;
       //pthread_mutex_unlock(&mutex);
    }
    pthread_exit(0);
}

void* consumer()
{
    for(int i=1;i<15;i++)
    {
    
       //while(count == 0){};
       printf("%d\n",buffer[out]);
       out=(out+1)%n;
       //pthread_mutex_lock(&mutex);
       count--;
       //pthread_mutex_unlock(&mutex);
       
    }
}

int main()
{
   pthread_t tid1,tid2;
   pthread_mutex_init(&mutex,NULL);
   pthread_create(&tid1,NULL,&producer,NULL);
   pthread_create(&tid2,NULL,&consumer,NULL);
   pthread_join(tid1,NULL);
   pthread_join(tid2,NULL);
}